{"version":3,"sources":["Components/Filter/Filter.module.css","App.module.css","Components/Container/Container.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/Container/Container.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetForm","preventDefault","className","s","form","label","input","type","pattern","title","required","onChange","button","Container","children","container","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","shortid","generate","Filter","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","window","setItem","stringify","filterContacts","normalizedFilter","toLowerCase","contact","includes","getFilterContacts","find","alert","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4910842.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2Rm05\",\"input\":\"Filter_input__37_Xl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2Dchd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1wnX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1GTZJ\",\"label\":\"ContactForm_label__2lgtc\",\"input\":\"ContactForm_input__2qoVd\",\"button\":\"ContactForm_button__331fE\"};","import { useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({onSubmit}) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n      \n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name,number)\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  \n};\n\nexport default ContactForm;\n\n// class ContactForm extends Component {\n  \n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   handleChange = (e) => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.resetForm();\n//   };\n\n//   resetForm = () => {\n//     this.setState({ name: \"\", number: \"\" });\n//   };\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit} className={s.form}>\n//         <label className={s.label}>\n//           Name\n//           <input\n//             className={s.input}\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.state.name}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//             onChange={this.handleChange}\n//           />\n//         </label>\n//         <label className={s.label}>\n//           Number\n//           <input\n//             className={s.input}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={this.state.number}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//             onChange={this.handleChange}\n//           />\n//         </label>\n//         <button type=\"submit\" className={s.button}>\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n//   state: PropTypes.object.isRequired,\n// };\n\n// export default ContactForm;","import s from \"./Container.module.css\";\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={shortid.generate()} className={s.item}>\n          {name}: {number}\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState,useEffect } from \"react\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Container from \"./Components/Container\";\nimport ContactList from \"./Components/ContactList\";\nimport Filter from \"./Components/Filter\";\nimport shortid from \"shortid\";\nimport s from \"./App.module.css\";\n\n\nfunction App() {\n   \n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n  \n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n \n\n const addContact = (name, number ) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      setContacts((prevState) => [...prevState, contact]);\n      }\n  };\n  \n\n const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getFilterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) =>\n      contact.id !== contactId));\n  };\n\n  // componentDidUpdate(prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  // }\n  // }\n\n  // componentDidMount() {\n  //   const contacts = JSON.parse(localStorage.getItem('contacts'));\n  //   if (contacts) {\n  //     this.setState({ contacts: contacts });\n  //   }\nconst filterContacts = getFilterContacts();\n\n    return (\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={filterContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    );\n  }\n\nexport default App;\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   addContact = ({ name, number }) => {\n//     const { contacts } = this.state;\n//     const contact = {\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     };\n\n//     if (contacts.find((contact) => contact.name === name)) {\n//       alert(`${name} is already in contacts.`);\n//     } else {\n//       this.setState((prevState) => ({\n//         contacts: [...prevState.contacts, contact],\n//       }));\n//     }\n//   };\n\n//   changeFilter = (e) => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n\n//   getFilterContacts = () => {\n//     const { filter, contacts } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(normalizedFilter)\n//     );\n//   };\n//   deleteContact = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== contactId\n//       ),\n//     }));\n//   };\n\n//   componentDidUpdate(prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//   }\n//   }\n\n//   componentDidMount() {\n//     const contacts = JSON.parse(localStorage.getItem('contacts'));\n//     if (contacts) {\n//       this.setState({ contacts: contacts });\n//     }\n\n    \n//   }\n\n//   render() {\n//     const { filter } = this.state;\n//     const filterContacts = this.getFilterContacts();\n\n//     return (\n//       <Container>\n//         <h1 className={s.title}>Phonebook</h1>\n//         <ContactForm onSubmit={this.addContact} state={this.state} />\n//         <h2 className={s.title}>Contacts</h2>\n//         <Filter value={filter} onChange={this.changeFilter} />\n//         <ContactList\n//           contacts={filterContacts}\n//           onDeleteContact={this.deleteContact}\n//         />\n//       </Container>\n//     );\n//   }\n// }\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2xqhG\",\"item\":\"ContactList_item__1dGfe\",\"button\":\"ContactList_button__3yAuI\"};"],"sourceRoot":""}